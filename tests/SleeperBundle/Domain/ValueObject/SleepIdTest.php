<?php

declare(strict_types=1);

use PHPUnit\Framework\TestCase;
use SleeperBundle\Domain\ValueObject\SleepId;

class SleepIdTest extends TestCase
{
    public function testThatSleepIdCanBeAutoGeneratedAndConvertedToString(): void
    {
        $generatedId = SleepId::generate();
        self::assertInstanceOf(SleepId::class, $generatedId);
        self::assertNotEmpty((string) $generatedId);
    }

    public function testThatIdCanBeAssignedAndConvertedToString(): void
    {
        $id = 'test-id';
        $sleepId = SleepId::createFrom($id);
        self::assertInstanceOf(SleepId::class, $sleepId);
        self::assertEquals($id, (string) $sleepId);
    }

    public function testThatTwoIdenticalIdsAreEqual(): void
    {
        $id1 = SleepId::createFrom('ok');
        $id2 = SleepId::createFrom('ok');

        self::assertTrue($id1->isEqualTo($id2));
    }

    public function testThatNonIdenticalIdsAreNotEqual(): void
    {
        $id1 = SleepId::createFrom('ok');
        $id2 = SleepId::createFrom('no');

        self::assertFalse($id1->isEqualTo($id2));
    }

    public function testThatTwoGeneratedIdsAreNotEqual(): void
    {
        $id1 = SleepId::generate();
        $id2 = SleepId::generate();

        self::assertFalse($id1->isEqualTo($id2));
    }
}
